{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","author","usersFromServer","find","userId","Object","assign","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"o08IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGD,EAAQE,OAGV,OAED,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,WCfFC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,WCJrCC,G,YAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGV,UAAU,WAAWE,KAAI,iBAAYQ,EAAKP,OAA7C,SACGO,EAAKT,SCAGU,EAAW,SAAC,GAAD,QACtBC,KACER,EAFoB,EAEpBA,KAFoB,IAGpBE,gBAHoB,MAGT,GAHS,EAIpBO,EAJoB,EAIpBA,MACAH,EALoB,EAKpBA,KALoB,OAQtB,sBAAKV,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGa,IAGH,8BACG,eAED,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGV,UAAU,iBAAb,SACGI,IAGDE,EAASQ,OAOT,cAAC,EAAD,CACER,SAAUA,IAPZ,qCACE,uBAEA,mBAAG,UAAQ,oBAAX,oCC/BKS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKhB,UAAU,WAAf,SACGgB,EAAMT,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,UCetB,IAAMI,EAAsBC,EAbbV,KAAI,SAACK,GAChB,IAAMM,EAASC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOI,EAAKS,UAE7D,OAAOC,OAAOC,OACZ,GACAX,EACA,CAAEF,KAAMQ,GACR,CAAEZ,SAAUkB,EACTC,QAAO,SAAA1B,GAAO,OAAIA,EAAQ2B,SAAWd,EAAKJ,WAOtCmB,EAAM,kBACjB,0BAAS3B,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUgB,MAAOA,QCtBrBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dfaa8286.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {comment.name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport './PostInfo.scss';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({\n  post: {\n    body,\n    comments = [],\n    title,\n    user,\n  },\n}) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    {!comments.length ? (\n      <>\n        <hr />\n\n        <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      </>\n    ) : (\n      <CommentList\n        comments={comments}\n      />\n    )}\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction postsAndDatta(posts) {\n  return posts.map((post) => {\n    const author = usersFromServer.find(user => user.id === post.userId);\n\n    return Object.assign(\n      {},\n      post,\n      { user: author },\n      { comments: commentsFromServer\n        .filter(comment => comment.postId === post.id) },\n    );\n  });\n}\n\nconst posts = postsAndDatta(postsFromServer);\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}